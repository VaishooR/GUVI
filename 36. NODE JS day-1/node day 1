node day 1


---> Frontend javascript: Javascript that runs by interpreting the browser is known as frontend js.
                          Javascript depends on the browser to run, only because it contains V8 engine(chrome).
                          V8 engine is a open source js engine, developed by google.
                          To make javascript independent of browser, a copy of V8 engine was taken out and made as a seperate server.
                          Now Javascript program runs independently on the terminal, without depending on browsers. This independent js program is known as Node js.

---> Node Js: is a server side Javascript library.
              was created by Ryan Dahl in 2009.
              is a single threaded application, it uses only one event loop, so single threaded, which makes it lighter and faster.
              uses event driven & a non-blocking i/o model.
              Event driven means event queue, worker threads.
              
              
---> How Nodejs works:

     Application --> V8 engine --> Event Queue --> Event Loop --> worker thread( if it is a blocking code) --> sends a callback to Event Loop.
     Application <-- V8 engine <-- Event Queue <-- Event Loop(if non-blocking)
     
     Once worker thread completes the asynch codes, sends a call back to event loop.
     Event loop gives priorty to worker thread's callbacks and excecutes those codes.

     Event Queue and Worker threads both are Queues where each task is queued inside them.
     

---> Blocking Codes vs Non-blocking codes:

     Blocking codes are those which depends on a 3rd party resiurce for its excecution.
     It takes time to excecute.
     
     Non-blocking codes doesnt depend on any 3rd party resource.
     Gets excecuted wo taking time.
     
     
---> To run JS codes in backend:
         Create a file in VScode with .js extension. --> Open Terminal --> Type 'node <filename>' --> Press Enter.
         Now the javascript code runs on the terminal, without the help of a browser. 
         This platform, where js codes run wo the help of a browser is known as Nodejs.
    
---> So Node js is:
         An open-source, cross-platform, 
         back-end JavaScript runtime environment 
         that runs on the V8 engine and executes
         JavaScript code outside a web browser.
    
    
---> Modules:
     Modules are a set of codes that are written on a seperate file and then imported where it is required.
     3 types: i) in-built modules: Node js itself consists of some modules. Doesnt require installation.
              ii) 3rd-party modules: Modules written by developers across the world, upload it to npm, from where we can download and use it. Installed using npm.
              iii) custom modules: Created by the users within the application and exported.
     

    
os module
fs module 
http module


OS module:
---------
     --> OS is a node module used to provide information about the computer operating system. 
         It provides functions to interact with the operating system. 
         It provides the hostname of the operating system and returns the amount of free system memory in bytes. 
     
     --> Ex: const os = require("os");
             console.log(os.arch());           // arch()	Returns the operating system CPU architecture
             console.log(os.hostname());       // hostname()	Returns the hostname of the operating system
             console.log(os.platform());       // platform()	Returns information about the operating system's platform
             console.log(os.tmpdir());         // tmpdir()	Returns the operating system's default directory for temporary files
             console.log(os.type());           // type()	Returns the name of the operating system
             console.log(os.userInfo());       // userInfo()	Returns information about the current user
             
             
             
FS Module (file System):
-----------------------

     --> The Node.js file system module allows you to work with the file system on your computer.
         To include the File System module, use the require() method:
         var fs = require('fs');
         
     --> Example:
         const fs= require('fs');
         fs.writeFileSync('newfile.js','A new file has been created on the current folder.');
 
     --> Common use for the File System module:
         Read files
         Create files
         Update files
         Delete files
         Rename files      



HTTP module:
-----------

     Steps includes:
     --> First create a server using http module.
     --> req url has all the details regarding the client info like query parameters.
     --> Depeneding upon the req url, write the response.
     --> End the response.
     --> Finally listen to the server in any port.
