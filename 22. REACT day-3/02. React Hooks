React Hooks:
------------

---> The concepts like state variable, life cycle methods are available only for class components.
---> For function components, they are available in the form of React Hooks.


---> To use state varaiables in function components, we use  'useState' hook.
---> To use lifecycle methods in function components, we use 'useEffect' hook.





useState:
---------

---> useState hook is used to update the state variable.

     Syntax:  const[variable,function] = useState(initial-value)
     
     Ex:      const[counter,setCounter] = useState(0)
              <button onClick={ () => setCounter(counter+1) }> Increment </button>
              <button onClick={ () => setCounter(counter-1) }> Decrement </button>
              <button onClick={ () => setCounter(0) }> Reset </button>
              
      




useEffect:
---------

---> To access the life cycle methods in function component, we use useEffect hook.
     
     Syntax:   useEffect( callback-function , dependency array )
  
     Ex:       useEffect( () => {console.log("Mounting phase")}, [] )             <--- Occurs during mounting phase, i.e just before return.
               useEffect( () => {console.log("Updating phase")}, [counter] )      <--- Occurs during updating phase, i.e when state variable undergoes any updation.
               useEffect( () => {
                          return( () => {console.log("Unmounting phase")} )       <--- Occurs during unmounting phase, i.e when a component gets unmounted.
                          }
                        )
     
     
     
