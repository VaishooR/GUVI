Callback Hell:
Nested callbacks are known as Callback hell.



setTimeout(()=>{
  console.log('3');
  setTimeout(()=>{
    console.log('2');
    setTimeout(()=>{
      console.log('1')
    },1000)
  },1000)
},1000)




OUTPUT:
"3"
"2"
"1"






Promise:


const msg=(countdown)=>
new Promise((resolve, reject)=>{
    if(countdown>0){
        setTimeout(()=>{
            document.querySelector('.root').innerText=countdown;
            resolve(countdown);
        },1000)
    } else {
        reject('Try later')
    }
});
msg(10)
.then(n=>msg(--n))
.then(n=>msg(--n))
.then(n=>msg(--n))
.then(n=>msg(--n))
.then(n=>msg(--n))
.then(n=>msg(--n))
.then(n=>msg(--n))
.then(n=>msg(--n))
.then(n=>msg(--n))
.then(()=>{
    setTimeout(()=>{
        document.querySelector('.root').innerHTML='Happy Independence Day';
    },1000)
})
.catch(()=>console.log('Set countdown greater than 1'));



